from __future__ import annotations
"""Base exchange adapter interface using Connector/Adapter pattern."""
from typing import Protocol, Dict, Any
import pandas as pd


class ExchangeAdapter(Protocol):
    def __init__(self, config: Dict[str, Any], dry_run: bool = True) -> None: ...
    def connect(self) -> None: ...
    def disconnect(self) -> None: ...
    def get_ohlcv(self, symbol: str, timeframe: str, limit: int = 200) -> pd.DataFrame: ...
    def place_order(self, symbol: str, side: str, order_type: str, quantity: float, price: float | None = None, **kwargs: Any) -> Dict[str, Any]: ...
    def modify_order(self, order_id: str, **kwargs: Any) -> Dict[str, Any]: ...
    def cancel_order(self, order_id: str) -> Dict[str, Any]: ...
    def get_account(self) -> Dict[str, Any]: ...
    def get_positions(self) -> pd.DataFrame | Dict[str, Any]: ...
